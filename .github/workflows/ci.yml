name: CI - Tests and quality analysis
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
jobs:

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests and generate coverage report
        id: run-tests
        run: mvn clean verify jacoco:report
        continue-on-error: true # some steps must be executed even in case on failure

      # if jacoco report doesn't exist, we can't go further
      - name: Verify coverage report existence and stop if missing
        run: |
          pwd
          ls
          if [ ! -f "./target/site/jacoco/jacoco.xml" ]; then          
           echo "Error: File 'back/target/site/jacoco/jacoco.xml' not found. Stopping pipeline."
           exit 1
          fi
        shell: bash

      - name: Upload backend coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./back/target/site/jacoco
          retention-days: 7

      - name: Publish backend coverage report to Github Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./back/target/site/jacoco
          destination_dir: ./coverage-backend

      - name: Upload backend coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend

      # Run SonarQube analysis
      # only if tests succeeded and checks have been met
      - name: SonarQube Scan
        if: steps.run-tests.outcome == 'success'
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
        with:
          args: >
            -Dsonar.organization=wilzwert
            -Dsonar.projectKey=wilzwert_BobApp_backend
            -Dproject.settings=./sonar-project-backend.properties

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Install Chrome browser
        id: install-chrome
        uses: browser-actions/setup-chrome@v1
       
      - name: Run tests with coverage
        env:
          CHROME_BIN: ${{ steps.install-chrome.outputs.chrome-path }}
        run: npm test -- --code-coverage --watch=false --browsers=ChromeHeadlessCI

      - name: Upload frontend coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./front/coverage/bobapp
          retention-days: 7

      - name: Publish frontend coverage report to Github Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./front/coverage/bobapp
          destination_dir: ./coverage-frontend

      - name: Upload frontend coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend

      # Run SonarQube analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        with:
          args: >
           -Dsonar.organization=wilzwert
           -Dsonar.projectKey=wilzwert_BobApp_frontend
           -Dproject.settings=./sonar-project-frontend.properties